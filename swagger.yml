openapi: 3.0.0
info:
  title: test - ctroncoso
  description: |-
    Enpoints to use api.
  version: 1.0.0
tags:
  - name: user
    description: All user enpoints

  - name: jwt
    description: jwt validates
    
  - name: drug
    description: CRUD Drugs

paths:
  /api/v1/user/signup:
    post:
      tags:
        - user
      description: create a new user
      requestBody:
        description: create user body
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string 

      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'          
        '400':
          description: errors schema validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaValidation'
              
  /api/v1/user/login:
    post:
      tags:
        - user
      description: enpoit to user login
      requestBody:
        description: create user body
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'          
        '400':
          description: errors schema validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaValidation'
                
        '401':
          description: errors wrong data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongLogin'                  
          
  /api/v1/jwt/validate:
    post:
      tags:
        - jwt
      description: enpoit to validate jwt
      requestBody:
        description: validate jwt
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jwt
              properties:
                jwt:
                  type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string         
        '400':
          description: errors schema validation
          content:
            application/json:
              schema:
                type: string
                
                
  /api/v1/user/drugs:
    post:
      tags:
        - user
      description: create new drug
      requestBody:
        description: create new drug
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string 

      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'          
        '400':
          description: errors schema validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaValidation'              
                
                
                
                
  /api/v1/drugs:
    get:
      tags:
        - drug
      description: enpoit to get all drugs
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'          
        '400':
          description: errors schema validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaValidation'
                
        '401':
          description: errors wrong data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrongLogin'           
          
          
components:
  schemas:
    UserCreate: 
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        password:
          type: string
        name:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
    
    UserLogin:
      type: object
      properties:
        token:
          type: string
          
    ErrorWrongLogin:
      type: object
      properties:
        errors:
          type: array
          items: 
            type: object
            properties:
              message:
                type: string
          
    ErrorSchemaValidation:
      type: object
      properties:
        status:
          type: number
        errors:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              field:
                type: string
              actual:
                type: string
            
        
  