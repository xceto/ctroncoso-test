{"version":3,"file":"validateToken.js","sourceRoot":"/","sources":["src/features/auth/controllers/validateToken.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,yCAA6C;AAEtC,MAAM,aAAa,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IAChF,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACzB,MAAM,UAAU,GAAG,IAAI,gBAAU,EAAE,CAAC;IACpC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IAEvE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5E,CAAC,CAAA,CAAC;AANW,QAAA,aAAa,iBAMxB","sourcesContent":["import { Request, Response } from 'express';\nimport { JWTService } from '../services/jwt';\n\nexport const validateToken = async (req: Request, res: Response): Promise<void> => {\n  const { jwt } = req.body;\n  const jwtService = new JWTService();\n  const { error, message } = await jwtService.verify({ jwtSecret: jwt });\n\n  error ? res.status(400).json(message) : res.status(200).json('valid jwt');\n};\n"]}