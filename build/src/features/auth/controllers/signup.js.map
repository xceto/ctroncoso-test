{"version":3,"file":"signup.js","sourceRoot":"/","sources":["src/features/auth/controllers/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGO,MAAM,MAAM,GAAG,CAAO,GAAY,EAAE,GAAa,EAAiB,EAAE;IACzE,wBAAwB;IACxB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACrC,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;IAE9D,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1B,CAAC,CAAA,CAAC;AANW,QAAA,MAAM,UAMjB;AAEF,MAAM,YAAY,GAAG,CAAO,EAC1B,KAAK,EACL,QAAQ,GAIT,EAAgC,EAAE;IACjC,OAAO;QACL,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,gBAAgB;QACvB,QAAQ,EAAE,oBAAoB;KAC/B,CAAC;AACJ,CAAC,CAAA,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport { AuthModelAttributes } from '../helpers/interfaces/auth';\n\nexport const signUp = async (req: Request, res: Response): Promise<void> => {\n  // se logea el usuario.-\n  const { email, password } = req.body;\n  const registerdUser = await registerUser({ email, password });\n\n  res.json(registerdUser);\n};\n\nconst registerUser = async ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): Promise<AuthModelAttributes> => {\n  return {\n    id: 0,\n    name: 'ceto',\n    email: 'ceto@gmail.com',\n    password: 'encripted password',\n  };\n};\n"]}